.gitignore

CC = gcc

ifeq (@(TUP_DEBUG),y)
CFLAGS += -g
else
CFLAGS += -Os
endif

CFLAGS += -W
CFLAGS += -Wall
ifeq (@(TUP_WERROR),y)
CFLAGS += -Werror
endif
CFLAGS += -Wbad-function-cast
CFLAGS += -Wcast-align
CFLAGS += -Wcast-qual
CFLAGS += -Wchar-subscripts
CFLAGS += -Wmissing-prototypes
CFLAGS += -Wnested-externs
CFLAGS += -Wpointer-arith
CFLAGS += -Wredundant-decls
CFLAGS += -Wshadow
CFLAGS += -Wstrict-prototypes
CFLAGS += -Wwrite-strings
CFLAGS += -fno-common
CFLAGS += -I$(TUP_CWD)/src

export PKG_CONFIG_PATH
CFLAGS += `pkg-config fuse --cflags`

# Compatibility function prototypes and include path for wrapper functions
MINGWCFLAGS += -include $(TUP_CWD)/src/compat/win32/mingw.h
MINGWCFLAGS += -I$(TUP_CWD)/src/compat/win32

# _GNU_SOURCE lets us use the %lli flag correctly
MINGWCFLAGS += -D_GNU_SOURCE

# No symlinks on windows
MINGWCFLAGS += -D'S_ISLNK(a)=0'
MINGWCFLAGS += -Dlstat=stat

# No sig_atomic_t on windows
MINGWCFLAGS += -Dsig_atomic_t=int

!cc = |> ^ CC %f^ $(CC) -c %f -o %o $(CFLAGS) $(CFLAGS_%f) |> %B.o
!ld = |> ^ LINK %o^ $(CC) %f -o %o $(LDFLAGS) $(LDFLAGS_%o) |>
!ar = |> ^ AR %o^ ar crs %o %f |>
!dot = |> ^ DOT %f^ dot -Efontname="Vernada, serif" -Nfontname="Vernada, serif" -Efontsize=10 -Nfontsize=10 -Tpng %f > %o |>
!cp = |> ^ CP %f -> %o^ cp %f %o |>
ifeq (@(TUP_MINGW),)
!mingwcc = |> |>
else
!mingwcc = |> ^ MINGW32CC %f^ @(TUP_MINGW)-gcc -c %f -o %o $(CFLAGS) $(CFLAGS_%f) $(MINGWCFLAGS) |> %B.omingw
endif

TUP_MONITOR = null
include @(TUP_PLATFORM).tup
